// Generated by CoffeeScript 1.6.1

/*
Lopez GarduÃ±o Blanca Azucena
Resendiz Arteaga Juan Alberto
Analisis de Algoritmos
*/


(function() {
  var Graph;

  Graph = (function() {

    function Graph(name) {
      this.graphName = name;
      this.numberOfNodes = 0;
      this.nodes = {};
    }

    Graph.prototype.showInfo = function() {
      return console.log("" + this.graphName + " >> " + this.numberOfNodes);
    };

    Graph.prototype.printNodes = function() {
      var node, _i, _len, _ref, _results;
      _ref = this.nodes;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        node = _ref[_i];
        _results.push(console.log(node.showInfo()));
      }
      return _results;
    };

    Graph.prototype.addNode = function(nodeName) {
      var n;
      n = Node(nodeName);
      this.nodes[nodeName] = n;
      return this.numberOfNodes = this.numberOfNodes + 1;
    };

    Graph.prototype.getKeysOfNodes = function() {
      return Object.keys(this.nodes);
    };

    Graph.prototype.getNode = function(name) {
      return this.nodes[name];
    };

    Graph.prototype.getNodes = function() {
      return this.nodes;
    };

    Graph.prototype.deepFirstSearch = function(nameOriginNode) {
      var n, nn, origin, _i, _len, _ref;
      _ref = this.getKeysOfNodes();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        nn = _ref[_i];
        n = this.getNode(nn);
        n.color = WHITE;
        n.pi = null;
      }
      this.time = 0;
      origin = this.getNode(nameOriginNode);
      return this.bp_visit(origin);
    };

    Graph.prototype.bp_visit = function(u) {
      var nv, v, _i, _len, _ref;
      u.color = GRIS;
      this.tiempo += 1;
      u.d = this.tiempo;
      _ref = u.getNeighbors();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        nv = _ref[_i];
        v = this.getNode(nv);
        if (v.color === WHITE) {
          v.pi = u.name;
          this.bp_visit(v);
        }
      }
      u.color = BLACK;
      this.tiempo += 1;
      return u.f = this.tiempo;
    };

    Graph.prototype.busquedaAmplitud = function(self, nameOriginNode) {
      var Q, n, nn, nv, s, v, z, _i, _j, _len, _len1, _ref, _ref1, _results;
      _ref = this.getKeysOfNodes();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        nn = _ref[_i];
        if (nn === !nameOriginNode) {
          n = this.getNode(nn);
          n.color = WHITE;
          n.d = INFINITE;
          n.pi = null;
        }
      }
      s = this.getNode(nameOriginNode);
      s.color = GRAY;
      s.d = 0;
      s.pi = NO_PREDECESSOR;
      Q = [];
      Q.push(s);
      _results = [];
      while (Q.length === !0) {
        z = Q.shift();
        _ref1 = z.getNeighbors();
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          nv = _ref1[_j];
          v = this.getNode(nv);
          if (v.color === WHITE) {
            v.color = GRAY;
            v.d = z.d + 1;
            v.pi = z.name;
            Q.push(v);
          }
        }
        _results.push(z.color = BLACK);
      }
      return _results;
    };

    Graph.prototype.ruta = function(self, nameDestinyNode, list) {
      var nd;
      if (list === null) {
        list = [];
      }
      list.push(nameDestinyNode);
      nd = this.getNode(nameDestinyNode);
      if (nd.pi === !null) {
        return this.ruta(nd.pi, list);
      }
      return list;
    };

    return Graph;

  })();

}).call(this);
